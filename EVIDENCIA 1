Nota_registrada = {}

print("Bienvenido al taller automotriz Hernandez")
print("Este es nuestro menú")
print("¿Qué deseas hacer hoy?")

def agregar_servicio(nota):
    nombre_servicio = input("Ingrese el nombre del servicio: ")
    while True:
        try:
            costo_servicio = float(input("Ingrese el costo del servicio: "))
            if costo_servicio <= 0:
                print("El costo debe ser mayor que cero.")
            else:
                nota.append((nombre_servicio, costo_servicio))
                break
        except ValueError:
            print("Ingrese un costo válido (número mayor que cero).")

def generar_reporte(numero_nota, detalles):
    print(f"Detalles de la nota {numero_nota}:")
    for clave, valor in detalles.items():
        print(f"{clave}: {valor}")

def cancelar_nota(numero_nota):
    nota = Nota_registrada.get(numero_nota)
    if nota:
        generar_reporte(numero_nota, nota)
        confirmacion = input(f"¿Deseas cancelar la nota {numero_nota}? (s/n): ").strip().lower()
        if confirmacion == 's':
            nota['Cancelada'] = True
            print(f"La nota {numero_nota} ha sido cancelada.")
        else:
            print(f"La nota {numero_nota} no fue cancelada.")
    else:
        print(f"La nota con folio {numero_nota} no existe en el sistema.")

def recuperar_nota(numero_nota):
    nota = Nota_registrada.get(numero_nota)
    if nota:
        if nota['Cancelada']:
            generar_reporte(numero_nota, nota)
            confirmacion = input(f"¿Deseas recuperar la nota {numero_nota}? (s/n): ").strip().lower()
            if confirmacion == 's':
                nota['Cancelada'] = False
                print(f"La nota {numero_nota} ha sido recuperada.")
            else:
                print(f"La nota {numero_nota} no fue recuperada.")
        else:
            print(f"La nota {numero_nota} no está cancelada y no se puede recuperar.")
    else:
        print(f"La nota con folio {numero_nota} no existe en el sistema.")

def main():
    folio_actual = 1

    while True:
        opcion = int(input("""Menú:
 1. Registrar una nota
        2. Consultas y reportes
        3. Recuperar una nota
        4. Cancelar una nota
        5. Mostrar notas canceladas
        6. Salir del sistema
        Favor de escoger una opción válida: """))

        if opcion == 1:
            # Registrar una nota
            cliente = input("Ingrese el nombre del cliente (o 'salir' para terminar): ")
            if cliente.lower() == 'salir':
                break

            fecha = input("Ingrese la fecha (YYYY-MM-DD): ")
            nota = []

            while True:
                agregar_servicio(nota)
                continuar = input("¿Desea agregar otro servicio? (s/n): ")
                if continuar.lower() != 's':
                    break

            total = sum(servicio[1] for servicio in nota)

            print("\nResumen de la nota:")
            print(f"Folio: {folio_actual}")
            print(f"Fecha: {fecha}")
            print(f"Cliente: {cliente}")
            print("Servicios:")
            for servicio in nota:
                print(f"- {servicio[0]}: ${servicio[1]}")
            print(f"Monto Total: ${total}\n")

            Nota_registrada[folio_actual] = {
                'Fecha': fecha,
                'Cliente': cliente,
                'Servicios': nota,
                'Monto Total': total,
                'Cancelada': False
            }

            folio_actual += 1

        elif opcion == 2:
            # Consultas y reportes
            while True:
                consulta = int(input("""Consulta y reportes:
                1. Consulta por período
                2. Consulta por folio
                3. Volver al menú principal
                Por favor, selecciona una opción: """))

                if consulta == 1:
                    # Consulta por período
                    fecha_inicial = input("Ingresa la fecha inicial (YYYY-MM-DD): ")
                    fecha_final = input("Ingresa la fecha final (YYYY-MM-DD): ")

                    notas_en_periodo = []
